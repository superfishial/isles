apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
spec:
  replicas: 1
  serviceName: vaultwarden
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: vaultwarden
          image: vaultwarden/server:1.30.3
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          envFrom:
            - secretRef:
                name: vaultwarden-env
            - configMapRef:
                name: vaultwarden-env
          volumeMounts:
            - mountPath: /data
              name: vaultwarden
      volumes:
        - name: vaultwarden
          persistentVolumeClaim:
            claimName: vaultwarden

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
spec:
  selector:
    app: vaultwarden
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitwarden
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  rules:
    - host: bitwarden.super.fish
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  number: 80
  tls:
    - hosts:
        - bitwarden.super.fish
      secretName: bitwarden.super.fish
